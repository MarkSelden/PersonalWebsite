{"version":3,"sources":["logo.svg","components/Me.JPG","components/headshot.js","components/section1.js","components/projects.js","components/section2.js","components/head.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","HeadShot","src","require","alt","height","width","Section1","className","Projects","props","examples","map","example","href","link","name","description","Section2","about","projects","skills","contact","Head","charset","content","http-equiv","App","section1","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"2JAAAA,EAAOC,QAAU,IAA0B,kC,kCCA3CD,EAAOC,QAAU,IAA0B,gC,wECS5BC,G,gBAPA,WACX,OAEE,yBAAKC,IAAKC,EAAQ,IAAaC,IAAI,cAAcC,OAAS,IAAKC,MAAQ,QCiB9DC,EAnBE,WAKZ,OACC,yBAAKC,UAAU,YACR,kBAAC,EAAD,MACC,gCAPK,OAOL,IANI,SAMJ,KACA,2BANA,cAMA,KALG,aAKH,OC0BCC,EAlCE,SAACC,GAEf,OAEG,yBAAKF,UAAU,YAEX,wCAECE,EAAMC,SAASC,KAAK,SAAAC,GAEnB,OACG,yBAAKL,UAAU,YAEZ,uBAAGM,KAAMD,EAAQE,MAEhBF,EAAQG,MAIT,+BAAKH,EAAQI,YAAb,WCSHC,EA1BE,SAAC,GAAyF,EAAxFC,MAAwF,EAA1DC,SAA0D,EAA7CC,OAA6C,EAA3BC,QAQ7E,OACG,yBAAKd,UAAU,YACZ,wCACA,2BAVU,4PAWV,sCAEA,sGAEA,iFAGA,kBAAC,EAAD,CAAUG,SAjBD,CACZ,CAACK,KAAK,SAAUC,YAAY,wGAAyGF,KAAK,wCAC1I,CAACC,KAAK,aAAcC,YAAY,6GAA8GF,KAAK,0CACnJ,CAACC,KAAK,cAAeC,YAAY,sHAAuHF,KAAK,iDAe1J,uCACA,qDCTMQ,EAfF,WACZ,OACG,8BAEI,0BAAMC,QAAQ,UACd,0BAAMR,KAAK,WAAWS,QAAQ,0CAC9B,0BAAMC,aAAW,kBAAkBD,QAAQ,YAC3C,qDCoCOE,MAvCf,WACE,OAEE,yBAAKnB,UAAU,SACb,kBAAC,EAAD,MACA,yBAAKoB,UAAQ,GACX,kBAAC,EAAD,OAGF,kBAAC,EAAD,QCJcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.ff1f3a01.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/Me.4e059d93.JPG\";","import React, { Component } from 'react'\n\nvar HeadShot = () => {\n    return (\n\n      <img src={require(\"./Me.JPG\")} alt=\"This is me!\" height ={350} width ={350}/>\n    );\n};\n\nexport default HeadShot;","import Headshot from './headshot.js'\nimport React, { Component } from 'react'\n\nconst Section1 = () => {\n\tconst firstName = 'Mark';\n\tconst lastName = 'Selden';\n\tconst city = 'Los Angeles';\n\tconst country = 'California';\n    \treturn (\n    \t\t<div className=\"section1\">\n            \t<Headshot />\n            \t\t<h2> {firstName} {lastName} </h2>\n            \t\t<p>{city}, {country}.</p>\n\t\t\t</div>\n\n    \t)\n  }\n\n\n\n\n\nexport default Section1;","import React from 'react'\nimport PropTypes from 'prop-types'\n\n\nconst Projects = (props) =>{\n    \n   return (\n\n      <div className=\"projects\">\n\n          <h2>Projects</h2>\n\n          {props.examples.map( example => {\n\n            return(\n               <div className=\"projComp\"> \n\n                  <a href={example.link}>\n\n                  {example.name}\n\n                  </a>\n\n                  <p> {example.description} < /p>\n\n               </div>\n             )\n         })}\n\n      </div>\n   \n   )\n}\n\nProjects.propTypes = {\n   examples: PropTypes.array\n}\n\nexport default Projects;","import React, { Component } from 'react'\nimport Projects from './projects'\n\n\n\n\nconst Section2 = ({about=\"no info about author\", projects={}, skills=\"useless\", contact=\"unreachable\"}) => {\n   const aboutMe = \"I am currently a Sophmore studying Computer Science at U.C. berkeley. I still don't know what I want to specialize in so I'm attempting to try everything! In my free time I love reading books, taking photos, listening to music, and watching movies.\"\n   const examps = [\n      {name:\"Equity\", description:\"A chrome extension which provides a score detailing the ethics of the company listing an amazon item.\", link:\"https://github.com/MarkSelden/equity\"},\n      {name:\"SmartPrice\", description:\"A webapp which returns statistical analysis on recent ebay trends to help a seller price their items well.\", link:\"https://github.com/kling111/SmartPrice\"},\n      {name:\"7sfg Mobile\", description:\"A mobile app designed to help aid the 7th Special Forces Group(Airborne) with their day-to-day duties.(In progress)\", link:\"https://github.com/ajrivera721/7SFG-Mobile\"}\n      ];\n\n   return (\n      <div className=\"section2\">\n         <h2>About Me</h2>\n         <p>{aboutMe}</p>\n         <h2>Skills</h2>\n\n         <p> Excellent:\n                Python, Java, React, Javascript, Leadership, Communication.</p>\n         <p>\n             Good:\n                C, React Native, Ruby, SQL, Scheme, Risc-V. </p>\n         <Projects examples={examps} />\n         <h2>Contact</h2>\n         <p>seldenm@berkeley.edu</p>\n      </div>\n      )\n}\n\nexport default Section2;","\nimport React, { Component } from 'react'\n\nconst Head = () => {\n\treturn (\n    <head>\n\n        <meta charset=\"UTF-8\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n        <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\" />\n        <title>Giorgi Tsereteli</title>\n\n    </head>\n\n    )\n\n    \t\n  }\nexport default Head;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Section1 from './components/section1.js'\nimport Section2 from './components/section2.js'\nimport Head from './components/head.js'\n\nfunction App() {\n  return (\n\n    <div className=\"grid2\">\n      <Head />\n      <div section1>\n        <Section1/>\n      </div>\n\n      <Section2/>\n\n    </div>\n\n     /*\n\n\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n\n  */\n\n\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}